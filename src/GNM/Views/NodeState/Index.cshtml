@model GNM.Models.Node
@{
    ViewBag.Title = "Node State";
    //Layout = null;
}

<div class="right_col" role="main">
    <div class="x_panel">
        <div class="x_title">
            <div class="page-title">
                <div class="title_left">
                    <h3>
                        Node State
                    </h3>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        @using (Html.BeginForm("AddEdit", "Node"))
        {

            <div class="row">
                <div class="item form-group">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.GatewayId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.GatewayId, @Model.GatewayList, new { id = "gatewayId", @class = "form-control" })
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <table id="nodestatetbl" border="1" class="table table-striped responsive-utilities jambo_table" width="100%">
                    <thead>
                        <tr class="headings">
                            <th style="text-align: center;" width="50%">Node</th>
                            <th style="text-align: center;" width="50%">Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <br />
        }
    </div>
</div>
@section scripts {
    <script type="text/javascript">
        $('#gatewayId').change(function () {
            if ($('#gatewayId').val().trim() != "") {
                GetNodeData($('#gatewayId').val());
            }
        });

        function GetNodeData(gatewayId) {
            $.ajax({
                type: "POST",
                data: "gatewayId=" + gatewayId,
                url: '/NodeState/GetNodeData',
                datatype: 'json',
                success: function (msg) {
                    if (msg != null) {
                        var result = "";
                        for (var i = 0; i < msg.length; i++) {
                            if (i % 2 == 0) {
                                result += "<tr class='even pointer' id='Node" + msg[i].NodeId + "'>";
                            } else {
                                result += "<tr class='odd pointer' id='Node" + msg[i].NodeId + "'>";
                            }

                            result += "<td style='text-align:center;' id='td-" + msg[i].NodeId + "'>" + msg[i].NodeName + "</td>";
                            if (msg[i].IsStart) {
                                result += '<td align="center"><div class="onoffswitch"><input type="checkbox" onclick="ChangeState(' + msg[i].NodeId + ',' + msg[i].IsStart + ')" class ="onoffswitch-checkbox" id="' + msg[i].NodeId + '" checked/>';
                                result += '    <label class="onoffswitch-label" style="width:70px;" for="myonoffswitch" onclick="ChangeState(' + msg[i].NodeId + ',' + msg[i].IsStart + ')">';
                                result += '<span class="onoffswitch-inner"> </span>';
                                result += '<span class="onoffswitch-switch"></span>';
                                result += '</label></div></td>';
                            } else {
                                result += '<td align="center"><div class="onoffswitch"><input type="checkbox" onclick="ChangeState(' + msg[i].NodeId + ',' + msg[i].IsStart + ')" class ="onoffswitch-checkbox" id="' + msg[i].NodeId + '" />';
                                result += '    <label class="onoffswitch-label" for="myonoffswitch" onclick="ChangeState(' + msg[i].NodeId + ',' + msg[i].IsStart + ')" style="width:70px;">';
                                result += '<span class="onoffswitch-inner"></span>';
                                result += '<span class="onoffswitch-switch"></span>';
                                result += '</label></div></td>';
                            }
                            result += "</tr>";
                        }
                        // result += "</tr>";
                        //var len = $('#nodestatetbl tbody tr').length;
                        //for (var i = len - 1; i > 0; i--) {
                        //    $('#nodestatetbl tbody tr')[i].remove();
                        //}
                        $('#nodestatetbl').dataTable().fnDestroy();
                        $('#nodestatetbl tbody').html(result);
                        tbl();
                    } else {
                        alert(msg);
                    }
                }
            });
        }

        function ChangeState(nodeid, status) {
            // if (status) {
            $.ajax({
                type: "GET",
                //data: "nodeId=" + nodeid + "&status=On",
                data: { 'nodeId': nodeid, 'IsStart': status },
                url: '@Url.Action("ChangeState","NodeState")',
                datatype: 'json',
                traditional: true,
                contentType: "application/json",
                success: function (msg) {
                    if (msg != null && msg == "SUCCESS") {
                        PubMessage(nodeid.toString());

                    }
                }
            });
        }
        function PubMessage(msg) {
            if (ylg) {
                PublishMessage({
                    ChannelName: "nodestate",
                    Message: msg,
                    Callback: function (acknowledgment) {
                        //  alert(acknowledgment);
                    }
                });
            } else {
                Console.log("First Connect to Yalgaar");
            }
        }
        function SubMessage(channelname) {
            if (ylg) {
                SubscribeMessage({
                    ChannelName: channelname,
                    Callback: function (message, acknowledgment) {

                        if (message != "") {
                            //alert(message);
                            var data = JSON.parse(message);
                            if (data.type == "Gateway") {
                                if (data.action == "Inserted") {
                                    $('#gatewayId').append($('<option>', {
                                        value: data.gatewayId,
                                        text: data.gatewayname,
                                    }));
                                }
                                else if (data.action == "Updated") {
                                    $("#gatewayId option[value='" + data.gatewayId.toString() + "']").text(data.gatewayname);
                                }
                                else if (data.action == "Deleted") {
                                    $("#gatewayId option[value='" + data.gatewayId.toString() + "']").remove();
                                }
                            }
                            else if (data.type == "Node") {
                                if (data.gatewayId.toString() == $('#gatewayId').val()) {
                                    if (data.action == "Inserted") {
                                        var result = "<tr class='even pointer' id='Node" + data.nodeId + "'>";
                                        result += "<td style='text-align:center;' id='td-" + data.nodeId + "'>" + data.nodeName + "</td>";
                                        result += '<td align="center"><div class="onoffswitch"><input type="checkbox" onclick="ChangeState(' + data.nodeId + ',' + false + ')" class ="onoffswitch-checkbox" id="' + data.nodeId + '" />';
                                        result += '    <label class="onoffswitch-label" for="myonoffswitch" onclick="ChangeState(' + data.nodeId + ',' + false + ')" style="width:70px;">';
                                        result += '<span class="onoffswitch-inner"></span>';
                                        result += '<span class="onoffswitch-switch"></span>';
                                        result += '</label></div></td>';
                                        result += "</tr>";
                                        $('#nodestatetbl tbody').append(result);
                                    }
                                    else if (data.action == "Updated") {
                                        $('#td-' + data.nodeId)[0].innerText = data.nodeName;
                                    }
                                    else if (data.action == "Deleted") {
                                        $('#Node' + data.nodeId).remove();
                                    }
                                }
                            }
                            else {
                                if ($('#' + message).val() != undefined) {
                                    if ($('#' + message)[0].checked == true) {
                                        $('#' + message)[0].checked = false;
                                    } else {
                                        $('#' + message)[0].checked = true;
                                    }
                                }
                            }
                        }
                    }
                });
            }
            else {
                Console.log("First Connect to Yalgaar");
            }
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            ConnectToYalgaar({
                ClientKey: '@System.Configuration.ConfigurationManager.AppSettings["YalgaarClientKey"].ToString()',
                SSL: false,
                Callback: function (acknowledgment) {
                    ylg = true;
                    SubMessage("nodestate","gateway","node");
                },
                Error: function (err) {
                    console.log(err);
                }
            });
            GetNodeData($('#gatewayId').val());
            tbl();

        });
    </script>
    <script>
        var asInitVals = new Array();
        function tbl() {

            //$(document).ready(function () {
            var oTable = $('#nodestatetbl').dataTable({
                "oLanguage": {
                    "sSearch": "Search all columns:"
                },
                "aoColumnDefs": [
                    {
                        'bSortable': false,
                        'aTargets': []
                    } //disables sorting for column one
                ],
                'iDisplayLength': 10,
                "sPaginationType": "full_numbers",
            });
            oTable.fnAdjustColumnSizing();
        };
        //});
    </script>
}
