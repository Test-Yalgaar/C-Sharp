@model IList<GNM.Models.User>
@{
    //Layout = null;
    ViewBag.Title = "Node State History";
}
@section scripts {
    <script type="text/javascript">
        $(function () {
            //$('#txtfromdate').daterangepicker({
            //    startDate: new Date(),
            //    format: "D/M/YYYY",
            //    calender_style: "picker_4",
            //    singleDatePicker: true,
            //    maxDate: new Date()
            //},
            //    function (start, end, label) {
            //        $('#txttodate').data().daterangepicker.minDate = start;
            //        if( moment($('#txttodate').val(), "D/M/YYYY")< moment($('#txtfromdate').val(), "D/M/YYYY"))
            //        {
            //            $('#txttodate').val($('#txtfromdate').val());
            //        }
            //    });
            //$('#txttodate').daterangepicker({
            //    startDate: new Date(),
            //    format: "D/M/YYYY",
            //    calender_style: "picker_4",
            //    singleDatePicker: true,
            //    maxDate: new Date(),
            //   // minDate: new Date(),
            //});
            $('#txtfromdate').daterangepicker({
                //"dateLimit": {
                //    "days": 7
                //},
                "startDate": new Date(),
                "endDate": new Date(),
                "maxDate": new Date(),
                locale: {
                    format: 'D/M/YYYY'
                },
                "opens": "left"
            });

            $('#txtfromdate').on('apply.daterangepicker', function (ev, picker) {
                var str = $('#txtfromdate').val().split('-');
                GetHistory(str[0].trim(), str[1].trim());
            });
        });


        function GetHistory(fromdate, todate) {
            $.ajax({
                type: "GET",
                data: { 'fromdate': fromdate, 'todate': todate },
                url: '@Url.Action("GetNodeHistoryData","NodeState")',
                datatype: 'json',
                traditional: true,
                contentType: "application/json",
                success: function (msg) {
                    if (msg != null) {
                        var result = "";
                        for (var i = 0; i < msg.length; i++) {
                            for (var j = 0; j < msg[i].GatewayData.length; j++) {
                                for (var k = 0; k < msg[i].GatewayData[j].NodeData.length; k++) {
                                    if (i % 2 == 0) {
                                        result += "<tr class='even pointer'>";
                                        result += "<td style='text-align:center;'>" + msg[i].GatewayData[j].NodeData[k].Createddate + "</td>";
                                        result += "<td style='text-align:center;'>" + msg[i].GatewayData[j].NodeData[k].NodeName + "</td>";
                                        result += "<td style='text-align:center;'>" + msg[i].GatewayData[j].GatewayName + "</td>";
                                        result += "<td style='text-align:center;'>" + msg[i].UserName + "</td>";
                                        result += "<td style='text-align:center;'>" + msg[i].GatewayData[j].NodeData[k].Status + "</td>";
                                        result += "</tr>";
                                    } else {
                                        result += "<tr class='odd pointer'>";
                                        result += "<td style='text-align:center;'>" + msg[i].GatewayData[j].NodeData[k].Createddate + "</td>";
                                        result += "<td style='text-align:center;'>" + msg[i].GatewayData[j].NodeData[k].NodeName + "</td>";
                                        result += "<td style='text-align:center;'>" + msg[i].GatewayData[j].GatewayName + "</td>";
                                        result += "<td style='text-align:center;'>" + msg[i].UserName + "</td>";
                                        result += "<td style='text-align:center;'>" + msg[i].GatewayData[j].NodeData[k].Status + "</td>";
                                        result += "</tr>";
                                    }
                                }
                            }
                        }
                        //var len = $('#nodeHistory tr').length;
                        //for (var i = len - 1; i > 0; i--) {
                        //    $('#nodeHistory tr')[i].remove();
                        //}
                        $('#nodeHistory').dataTable().fnDestroy();
                        $('#nodeHistory tbody').html(result);
                        tbl();
                        //$('#nodeHistory').append(result);
                    } else {
                        alert(msg);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            var dt = new Date();
            var dat = dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear();
            $('#txtfromdate').val(dat + " - " + dat);
            tbl();
        });

        var asInitVals = new Array();
        // $(document).ready(function () {
        function tbl() {
            var oTable = $('#nodeHistory').dataTable({
                "oLanguage": {
                    "sSearch": "Search all columns:"
                },
                //    "bAutoWidth": false,
                "aoColumnDefs": [
                    {
                        'bSortable': true,
                        'aTargets': [0],
                    }//disables sorting for column one
                ],
                'iDisplayLength': 10,
                "sPaginationType": "full_numbers",
            });
            oTable.fnSort([[0, 'desc']]);
            oTable.fnAdjustColumnSizing();
        }
        // });

    </script>
}
<div class="right_col" role="main">
    <div class="x_panel">
        <div class="x_title">
            <div class="page-title">
                <div class="title_left">
                    <h3>
                        Node State History
                    </h3>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="item form-group">
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="control-label">Date:</label>
                        @*</div>
                            <div class="col-md-3">*@
                        <input type="text" class="form-control daterangepicker" id="txtfromdate" name="" readonly />
                    </div>
                </div>
                @*<div class="col-md-3">
                        <div class="item form-group">
                            <label class="control-label">To Date:</label>
                            <input type="text" class="form-control daterangepicker" id="txttodate" readonly />
                        </div>
                    </div>*@
                @*<div class="col-md-2">
                        <br />
                        <input type="button" id="btnShow" value="Show" class="btn btn-danger submit" />
                    </div>*@
            </div>
        </div>
        <br />
        <div class="row">
            <div class="form-group">
                <table id="nodeHistory" border="1" class="table table-striped responsive-utilities jambo_table" width="100%">
                    <thead>
                        <tr class="headings">
                            <th style="text-align: center;" width="15%">Date</th>
                            <th style="text-align: center;" width="25%">Node Name</th>
                            <th style="text-align: center;" width="30%">Gateway Name</th>
                            <th style="text-align: center;" width="18%">Action By</th>
                            <th style="text-align: center;" width="12%">Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Count > 0)
                        {
                            for (var i = 0; i < Model.Count; i++)
                            {
                                for (var j = 0; j < Model[i].GatewayData.Count; j++)
                                {
                                    for (var k = 0; k < Model[i].GatewayData[j].NodeData.Count; k++)
                                    {
                                        if (i % 2 == 0)
                                        {
                                            <tr class="even pointer">
                                                <td style="text-align:center;">@Model[i].GatewayData[j].NodeData[k].Createddate</td>
                                                <td style="text-align:center;">@Model[i].GatewayData[j].NodeData[k].NodeName</td>
                                                <td style="text-align:center;">@Model[i].GatewayData[j].GatewayName</td>
                                                <td style="text-align:center;">@Model[i].UserName</td>
                                                <td style="text-align:center;">@Model[i].GatewayData[j].NodeData[k].Status</td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr class="odd pointer">
                                                <td style="text-align:center;">@Model[i].GatewayData[j].NodeData[k].Createddate</td>
                                                <td style="text-align:center;">@Model[i].GatewayData[j].NodeData[k].NodeName</td>
                                                <td style="text-align:center;">@Model[i].GatewayData[j].GatewayName</td>
                                                <td style="text-align:center;">@Model[i].UserName</td>
                                                <td style="text-align:center;">@Model[i].GatewayData[j].NodeData[k].Status</td>
                                            </tr>
                                        }
                                    }
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

